#!/usr/bin/python
import os
import glob
import subprocess
from cPickle import load

#Jump through a hoop to import my mail function.
import sys
sys.path.append("/home/jgilmore/bin")
import mail

#Open for reading
try:
	f=open(os.path.expanduser("~/.gmailpasswd"),"r")
except IOError, (errno, strerror):
	if errno == 2:
		print("""
			Passwords credentials file was not found.
			To create this file, type "python" and at the prompt enter:
			from cPickle import dump
			c=["username","password"]
			f=open("~/.gmailpasswd","wb")
			dump(c,f)
			f.close()
			<Ctrl-D>
			replace the "~/" with the appropriate home directory for your system
			""")
	else:
		print "Unhandled IO error type"
		raise

#Load the stored credentials.
credentials=load(f)
f.close()

#Time to beat:
mytime=os.stat(os.path.expanduser("~/.gmailpasswd")).st_mtime

# cycle through all documents in /doc, encrypt and email any which are newer
# filestring = string list of files
fileslist=[]
bodystring=""
filestring=""
subject=""
def checkNadd(filename):
	""" Add a file to the file list. IF its newer """
	global filestring
	global fileslist
	global bodystring
	global subject
	status   = os.stat(filename)
	if status.st_mtime > mytime:
		fileslist.append(filename)
		filestring += filename + "\n"
		#print filename
		if os.path.basename(filename).startswith("Journal") and filename.endswith(".txt"):
			f=open(filename,"r")
			addme=False
			for line in f:
				if line.endswith(":"):
					addme=False
				if addme:
					bodystring+=line
				if line.lower().lstrip().startswith("anna:"):
					addme=True
					bodystring+="From " + filename + "\n\n"
					name, sub=line.split(":",1)
					if sub:
						subject += sub.strip() + " "
			f.close()
	#else:
	#	print str(status.st_mtime) + "<" + str(mytime)
	#For journal entries, add any "anna:" sections to the email body.

# Backup my Documents directory
for root,dirs,files in os.walk(os.path.expanduser("~/docs")):
	#print root, dirs, files
	files.sort()
	for file in files:
		checkNadd(os.path.join(root,file))

# Backup my firefox bookmarks file
for root,dirs,files in os.walk(glob.glob(os.path.expanduser("~/.mozilla/firefox/*.default/bookmarkbackups"))[0]):
	#print root, dirs, files
	files.sort()
	for file in files:
		checkNadd(os.path.join(root,file))

if len(fileslist) == 0:
	exit(0)

bodystring += "\n\n Changed files included in the backup:\n\n" + filestring

fileslist.insert(0,"-P")
fileslist.insert(0,"-c")
fileslist.insert(0,"/bin/tar")
#print fileslist
#print fileslist
#print filestring
#print bodystring
# This implements "tar -c --strip-components
tar=subprocess.Popen(fileslist,stdout=subprocess.PIPE,bufsize=-1)
f=open("/tmp/autobackup.tar.gpg","wb")
gpg=subprocess.Popen(["/usr/bin/gpg","-r","j.arthur.gilmore@gmail.com","--encrypt"],stdout=f,stdin=tar.stdout,bufsize=-1)

if subject == "":
	subject="Autobackup Email"

if gpg.wait() == 0 and tar.wait() == 0:
	if mail.mail("anna.gilmore@gmail.com",subject,bodystring,filelist=["/tmp/autobackup.tar.gpg","/home/jgilmore/Safe.dat"]):
		#	os.mtime(os.path.expanduser("~/.gmailpasswd"),None)
		os.execv("/usr/bin/touch",("touch",os.path.expanduser("~/.gmailpasswd")))

